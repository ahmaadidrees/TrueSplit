{"ast":null,"code":"var _jsxFileName = \"/Users/ahmaadidrees/Desktop/react-true-split/src/componets/Driver.js\";\nimport React, { Component } from 'react';\nimport GetTax from './GetTax';\nimport ListItems from './ListItems';\nimport GetName from './GetName';\nimport { GetTip } from './GetTip';\nimport Results from './Results';\nexport class Driver extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.myStep = () => {\n      const newResult = this.state.result;\n      const newResults = [...this.state.results, newResult];\n      this.setState({\n        results: newResults,\n        step: 2,\n        //name: '',\n        //tip:'',\n        result: {\n          name: '',\n          key: '',\n          tip: '',\n          sum: ''\n        }\n      });\n    };\n\n    this.handleChange = input => e => {\n      if (input === 'currentItem') {\n        this.setState({\n          currentItem: {\n            text: e.target.value,\n            key: Date.now()\n          }\n        });\n      } else if (input === 'name') {\n        this.setState({\n          name: e.target.value,\n          result: {\n            name: e.target.value,\n            key: Date.now()\n          }\n        });\n      } else if (input === 'tip') {\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = e.target.value;\n        const tipped = parseFloat(tip);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed * summed + summed;\n        const tippedTotal = tipped * taxedTotal + taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTipped = tippedTotal.toFixed(2);\n        this.setState({\n          tip: e.target.value,\n          result: { ...this.state.result,\n            tip: e.target.value,\n            totalAfterTax: cleanedTaxedTotal.toString(),\n            totalAfterTip: cleanedTipped.toString()\n          }\n        });\n      } else {\n        this.setState({\n          [input]: e.target.value\n        });\n      }\n    };\n\n    this.state = {\n      step: 1,\n      numPeople: '',\n      salesTax: '',\n      tip: '',\n      items: [],\n      sum: '',\n      name: '',\n      currentItem: {\n        text: '',\n        key: ''\n      },\n      results: [],\n      result: {\n        name: '',\n        key: '',\n        tip: '',\n        sum: '',\n        totalAfterTax: '',\n        totalAfterTip: ''\n      }\n    };\n    this.addItem = this.addItem.bind(this);\n    this.sumList = this.sumList.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  } // Proceed to next step\n\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  sumList(e) {\n    e.preventDefault();\n    const list = this.state.items;\n    var total = 0;\n    list.map(item => {\n      var value = parseFloat(item.text);\n      total += value;\n    });\n    this.setState({\n      result: { ...this.state.result,\n        sum: total.toString()\n      },\n      sum: total.toString()\n    });\n    this.nextStep(e);\n    this.setState({\n      items: []\n    }); // console.log(\"Total: \"+total)\n\n    console.log(\"sum: \" + this.state.sum);\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\" && !isNaN(newItem.text)) {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      step\n    } = this.state; // const { numPeople, salesTax, name, tip, items, currentItem, sum, sums, ID, results} = this.state;\n\n    const values = this.state;\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(GetTax, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(GetName, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          addName: this.addName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ListItems, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          addItem: this.addItem,\n          deleteItem: this.deleteItem,\n          sumList: this.sumList,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(GetTip, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(Results, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          myStep: this.myStep,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }\n        });\n\n      default:\n        console.log('This is a multi-step form built with React.');\n    }\n  }\n\n}\nexport default Driver;","map":{"version":3,"sources":["/Users/ahmaadidrees/Desktop/react-true-split/src/componets/Driver.js"],"names":["React","Component","GetTax","ListItems","GetName","GetTip","Results","Driver","constructor","props","nextStep","step","state","setState","prevStep","myStep","newResult","result","newResults","results","name","key","tip","sum","handleChange","input","e","currentItem","text","target","value","Date","now","tax","salesTax","taxed","parseFloat","tipped","summed","taxedTotal","tippedTotal","cleanedTaxedTotal","toFixed","cleanedTipped","totalAfterTax","toString","totalAfterTip","numPeople","items","addItem","bind","sumList","deleteItem","filteredItems","filter","item","preventDefault","list","total","map","console","log","newItem","isNaN","render","values","addName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GetTax from './GetTax';\nimport ListItems from './ListItems';\nimport GetName from './GetName';\nimport { GetTip } from './GetTip';\nimport Results from './Results';\nexport class Driver extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n            step: 1,\n            numPeople: '',\n            salesTax: '',\n            tip: '',\n            items:[],\n            sum:'',\n            name:'',\n            currentItem:{\n                text:'',\n                key:''\n            },\n            results: [],\n            result:{\n              name: '',\n              key: '',\n              tip: '',\n              sum: '',\n              totalAfterTax: '',\n              totalAfterTip: ''\n            }\n\n          \n    }\n    this.addItem = this.addItem.bind(this);\n    this.sumList = this.sumList.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n}\n  \n    // Proceed to next step\n    nextStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n  \n    // Go back to prev step\n    prevStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n  \n    deleteItem(key){\n      const filteredItems= this.state.items.filter(item =>\n        item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  \n    }\n    myStep = () => {\n      const newResult = this.state.result;\n      const newResults = [...this.state.results, newResult]\n      this.setState({\n        results: newResults,\n        step: 2,\n        //name: '',\n        //tip:'',\n        result:{\n          name: '',\n          key: '',\n          tip: '',\n          sum: ''\n        }\n      })\n      \n        \n\n    };\n    // Handle fields change\n    handleChange = input => e => {\n      if (input==='currentItem') {\n        this.setState({\n            currentItem:{\n                text: e.target.value,\n                key: Date.now()\n             }\n        })\n      }\n      else if(input==='name'){\n        this.setState({\n          name: e.target.value,\n          result:{\n            name: e.target.value,\n            key: Date.now()\n          }\n          \n        })\n      }\n      else if(input==='tip'){\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = e.target.value;\n        const tipped = parseFloat(tip);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const tippedTotal = tipped*taxedTotal+taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTipped = tippedTotal.toFixed(2);\n        this.setState(({\n          tip: e.target.value,\n          result: {\n            ...this.state.result,          \n            tip: e.target.value,\n            totalAfterTax: cleanedTaxedTotal.toString(),\n            totalAfterTip: cleanedTipped.toString()\n          }\n        }))\n      }\n      else {\n        this.setState({ [input]: e.target.value });\n      }\n        \n    };\n\n    sumList(e){\n        e.preventDefault();\n        const list = this.state.items;\n        var total = 0;\n        list.map(item=> {\n            var value = parseFloat(item.text);\n            total += value;\n            \n        })\n        this.setState({\n            result:{\n              ...this.state.result,\n              sum: total.toString()},\n            sum: total.toString()\n        })\n        this.nextStep(e);\n        this.setState({\n            items: []\n        })\n        \n        \n       // console.log(\"Total: \"+total)\n        console.log(\"sum: \"+this.state.sum)\n      }\n    \n    addItem(e){\n        e.preventDefault();\n        const newItem = this.state.currentItem;\n\n        if(newItem.text !==\"\"&& !isNaN(newItem.text)){\n          const items = [...this.state.items, newItem];\n        this.setState({\n          items: items,\n          currentItem:{\n            text:'',\n            key:''\n          }\n        })\n        }\n      }\n   \n  \n    render() {\n      const { step } = this.state;\n     // const { numPeople, salesTax, name, tip, items, currentItem, sum, sums, ID, results} = this.state;\n      const values = this.state;\n      switch (step) {\n        case 1:\n          return (\n            <GetTax\n              nextStep={this.nextStep}\n              handleChange={this.handleChange}\n              values={values}\n            />\n          );\n          case 2:\n            return (\n            <GetName\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n                addName={this.addName}\n            />\n         ); \n         case 3:\n            return (\n            <ListItems\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                addItem={this.addItem}\n                deleteItem={this.deleteItem}\n                sumList={this.sumList}\n                values={values}\n            />\n         ); \n         case 4:\n            return (\n            <GetTip\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n            />\n         ); \n         case 5:\n            return (\n            <Results\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n                myStep={this.myStep}\n            />\n         ); \n         \n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n    }\n  }\n  \n  export default Driver;"]},"metadata":{},"sourceType":"module"}