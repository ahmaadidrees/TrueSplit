{"ast":null,"code":"var _jsxFileName = \"/Users/ahmaadidrees/Desktop/react-true-split/src/componets/UserForm.js\";\nimport React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport ListItems from './ListItems';\nimport GetName from './GetName';\nimport { GetTip } from './GetTip';\nimport Results from './Results';\nexport class UserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      numPeople: '',\n      salesTax: '',\n      name: '',\n      tip: '',\n      items: [],\n      sum: 0,\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      if (input === 'currentItem') {\n        this.setState({\n          currentItem: {\n            text: e.target.value,\n            key: Date.now()\n          }\n        });\n      } else {\n        this.setState({\n          [input]: e.target.value\n        });\n      }\n    };\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\" && !isNaN(newItem.text)) {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      numPeople,\n      salesTax,\n      name,\n      tip,\n      items,\n      currentItem\n    } = this.state;\n    const values = {\n      numPeople,\n      salesTax,\n      name,\n      tip,\n      items,\n      currentItem\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/React.createElement(FormUserDetails, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(GetName, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(ListItems, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          addItem: this.addItem,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(GetTip, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(Results, {\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          handleChange: this.handleChange,\n          values: values,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        });\n\n      default:\n        console.log('This is a multi-step form built with React.');\n    }\n  }\n\n}\nexport default UserForm;","map":{"version":3,"sources":["/Users/ahmaadidrees/Desktop/react-true-split/src/componets/UserForm.js"],"names":["React","Component","FormUserDetails","ListItems","GetName","GetTip","Results","UserForm","state","step","numPeople","salesTax","name","tip","items","sum","currentItem","text","key","nextStep","setState","prevStep","handleChange","input","e","target","value","Date","now","addItem","preventDefault","newItem","isNaN","render","values","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport ListItems from './ListItems';\nimport GetName from './GetName'\nimport { GetTip } from './GetTip';\nimport Results from './Results'\nexport class UserForm extends Component {\n    state = {\n      step: 1,\n      numPeople: '',\n      salesTax: '',\n      name: '',\n      tip: '',\n      items:[],\n          sum:0,\n          currentItem:{\n            text:'',\n            key:''\n          }\n    };\n  \n    // Proceed to next step\n    nextStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n  \n    // Go back to prev step\n    prevStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n  \n    // Handle fields change\n    handleChange = input => e => {\n      if (input==='currentItem') {\n        this.setState({\n            currentItem:{\n                text: e.target.value,\n                key: Date.now()\n             }\n        })\n      } else {\n        this.setState({ [input]: e.target.value });\n      }\n        \n    };\n\n    addItem(e){\n        e.preventDefault();\n        const newItem = this.state.currentItem;\n\n        if(newItem.text !==\"\"&& !isNaN(newItem.text)){\n          const items = [...this.state.items, newItem];\n        this.setState({\n          items: items,\n          currentItem:{\n            text:'',\n            key:''\n          }\n        })\n        }\n      }\n  \n    render() {\n      const { step } = this.state;\n      const { numPeople, salesTax, name, tip, items, currentItem} = this.state;\n      const values = { numPeople, salesTax, name, tip, items, currentItem };\n      switch (step) {\n        case 1:\n          return (\n            <FormUserDetails\n              nextStep={this.nextStep}\n              handleChange={this.handleChange}\n              values={values}\n            />\n          );\n          case 2:\n            return (\n            <GetName\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n            />\n         ); \n         case 3:\n            return (\n            <ListItems\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                addItem={this.addItem}\n                values={values}\n            />\n         ); \n         case 4:\n            return (\n            <GetTip\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n            />\n         ); \n         case 5:\n            return (\n            <Results\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n            />\n         ); \n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n    }\n  }\n  \n  export default UserForm;"]},"metadata":{},"sourceType":"module"}