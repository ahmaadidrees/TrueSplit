{"version":3,"sources":["componets/GetTax.js","componets/ItemLister.js","componets/ListItems.js","componets/GetName.js","componets/GetTip.js","componets/Results.js","componets/Driver.js","App.js","serviceWorker.js","index.js"],"names":["GetTax","continue","e","preventDefault","props","values","salesTax","console","log","nextStep","handleChange","this","className","id","onSubmit","type","step","placeholder","onChange","Component","ItemLister","listItems","items","map","item","key","text","onClick","deleteItem","ListItems","state","forEach","setState","name","addItem","value","currentItem","setUpdate","sumList","GetName","result","GetTip","tip","noTip","tenPercent","fifteenPercent","twentyPercent","Results","myStep","totalAfterTax","parseFloat","sum","cleanedTotalAfterTax","toFixed","cleanedTotalAfterTip","isNaN","listResults","results","totalAfterTip","Driver","prevStep","newResult","newResults","input","target","Date","now","tax","taxed","tipped","summed","taxedTotal","tippedTotal","cleanedTaxedTotal","cleanedTipped","toString","taxInPercent","cleanedTax","cleanedTippedTotal","bind","filteredItems","filter","list","total","newItem","addName","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b71a6835.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './GetTax.css';\nexport class GetTax extends Component {\n    continue = e => {\n        e.preventDefault();\n        if(this.props.values.salesTax===''){\n           \n            console.log(\"hi\");\n\n        }\n        else{\n            this.props.nextStep();\n            console.log(\"hi\");\n            console.log(this.props.values.salesTax)\n\n        }\n    };\n\n    render() {\n        const {  handleChange } = this.props;\n        return (\n            <div className=\"GetTax\">\n                <h1><center>Welcome to True Split</center></h1>\n                <form id=\"salesTax\" onSubmit={this.continue}>\n                    <input type=\"number\" step=\"0.001\" placeholder=\"enter the local sales tax %.......ie. 8.5\" onChange={handleChange('salesTax')} ></input>\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <b id=\"hint\">-hint: </b><p id=\"tip\">if you don't know the local sales tax, you can easily find it by googling! San Francisco's is 8.5% :)</p>\n            </div>\n        );\n    }\n}\nexport default GetTax;","import React from 'react'\nimport './ItemLister.css';\n\nfunction ItemLister(props){\n    const items = props.items;\n    \n    const listItems = items.map(item =>\n        \n   {\n       return <div className=\"list\" key={item.key}>\n           \n     <p>\n         {item.text} \n        \n     </p>\n     <form id=\"deleteButton\">\n         <button onClick={ () => props.deleteItem(item.key)}>X</button></form>\n    </div>})\n    return <div>\n      \n        {listItems}\n    </div>;\n  }\n  \n\n  export default ItemLister;","import React, { Component } from 'react';\nimport ItemLister from './ItemLister';\nimport './ListItems.css';\nexport class ListItems extends Component {\n    \n      setUpdate(text,key){\n        const items = this.state.items;\n        items.forEach(item=>{      \n          if(item.key===key){\n            item.text= text;\n          }\n        })\n        this.props.setState({\n          items: items\n        })\n      }\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n    render(){\n        return (\n          <div className=\"ListItems\">\n            <h3><center>Enter the price of all the items one at a time for {this.props.values.name}!</center></h3>\n            <header>\n        \n        <form id=\"itemForm\" onSubmit={this.props.addItem}>\n          <input type=\"number\" step=\"0.01\" placeholder=\"Enter cost of item............ie. 12.50\" value= {this.props.values.currentItem.text} onChange={this.props.handleChange('currentItem')}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n        <p>{this.props.values.items.text}\n        \n        </p>\n        \n        \n        <ItemLister items={this.props.values.items} deleteItem={this.props.deleteItem} setUpdate={this.setUpdate} sumList={this.props.sumList}/>\n        <form id=\"submitButton\" onSubmit={this.props.sumList}>\n            <button type=\"submit\">continue</button>\n        </form>\n      </header>\n          </div>\n        );\n       }\n    }\n    export default ListItems;\n","import React, { Component } from 'react';\nimport './GetName.css';\nexport class GetName extends Component {\n\n\n    continue = e => {\n        e.preventDefault();\n        if(this.props.values.result.name===''){\n           \n            console.log(\"hi\");\n\n        }\n        else{\n            this.props.nextStep();\n            console.log(\"hi\");\n            console.log(this.props.values.result.name)\n\n        }\n    };\n    render() {\n        const { values, handleChange } = this.props; \n        return (\n            <div className=\"GetName\">\n                <h3><center>Please enter a name</center></h3>\n                <form id=\"getName\" onSubmit={this.continue}>\n                    <input type=\"text\" placeholder=\"enter name\" onChange={handleChange('name')} value={values.result.name}></input>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        );\n    \n    }\n    \n}\nexport default GetName;\n","import React, { Component } from 'react';\nimport './GetTip.css';\n\nexport class GetTip extends Component{\n    continue = e => {\n        e.preventDefault();\n        if(this.props.values.result.tip===''){\n           \n            console.log(\"hi\");\n\n        }\n        else{\n            this.props.nextStep();\n            console.log(\"hi\");\n            console.log(this.props.values.result.tip)\n\n        }\n    };\n    \n    render() {\n       \n        const {  handleChange } = this.props;\n        return (\n            <div className=\"GetTip\">\n                <h3><center>Select your desired tip percentage in decimal form</center></h3>\n                <form id=\"getTip\" onSubmit={this.continue}>\n                    <input type=\"number\" step=\"0.0001\" placeholder=\"enter tip %\" onChange={handleChange('tip')} ></input>\n                    <button type=\"submit\">Submit</button>\n                </form>\n               \n                \n                    <form id=\"noTip\" onSubmit={this.props.noTip} >\n                        <button type=\"submit\">No Tip</button>\n                    </form>\n                \n                    <form id=\"tenPercent\" onSubmit={this.props.tenPercent}>\n                        <button type=\"submit\">10%</button>\n                    </form>\n               \n                    <form id=\"fifteenPercent\" onSubmit={this.props.fifteenPercent} >\n                        <button type=\"submit\">15%</button>\n                    </form>\n                \n                    <form id=\"twentyPercent\" onSubmit={this.props.twentyPercent}>\n                        <button type=\"submit\">20%</button>\n                    </form>\n                \n                \n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './Results.css';\n\nexport class Results extends Component {\n\n    render() {\n        \n    const { values, myStep } = this.props; \n    const totalAfterTax = (parseFloat(values.result.sum) * parseFloat(values.salesTax)) + parseFloat(values.result.sum);\n    const cleanedTotalAfterTax = totalAfterTax.toFixed(2);\n    var totalAfterTip;\n    if(isNaN(values.result.tip)){\n         totalAfterTip = totalAfterTax;\n    }\n    else{\n         totalAfterTip = (totalAfterTax * parseFloat(values.result.tip)) +totalAfterTax;\n\n    }\n    const cleanedTotalAfterTip  = totalAfterTip.toFixed(2);\n    const results = values.results;\n    const listResults = results.map(result =>\n       \n   {\n       return <div className=\"ResultsList\" key={result.key}>\n     <p>\n        <label>name:  <b>{result.name} </b></label>\n     </p>\n     <p>\n        <label>total:  {result.sum} </label>\n     </p>\n     <p>\n        <label>total after tax:  {result.totalAfterTax} </label>\n     </p>\n     <p>\n        <label>total after tip: {result.totalAfterTip} </label>\n        \n     </p>\n     <br></br>\n    \n    </div>})\n    return <div className=\"Results\">\n    <h3><center>Results!</center></h3>\n    <p>{\"Name: \"}<b>{values.result.name}</b></p>\n    <p>{\"total: \"+ values.result.sum}</p>\n    <p>{\"total after tax: \"+cleanedTotalAfterTax}</p>\n    <p>{\"total after tip: \"+cleanedTotalAfterTip}</p>\n    <br></br>\n              {listResults}\n      <form id=\"anotherPerson\" onSubmit={myStep}>\n             <button type=\"submit\">Click here to Calculate another person or refresh page for another bill</button>\n    </form>\n        \n    </div>;\n        \n    }\n    \n}\nexport default Results;\n","import React, { Component } from 'react';\nimport GetTax from './GetTax';\nimport ListItems from './ListItems';\nimport GetName from './GetName';\nimport { GetTip } from './GetTip';\nimport Results from './Results';\nexport class Driver extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            step: 1,\n            salesTax: '',\n            items:[],\n            currentItem:{\n                text:'',\n                key:''\n            },\n            results: [],\n            result:{\n              name: '',\n              key: '',\n              tip: '',\n              sum: '',\n              totalAfterTax: '',\n              totalAfterTip: ''\n            }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.sumList = this.sumList.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n}\n  \n    nextStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n  \n    prevStep = () => {\n      const { step } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n  \n    deleteItem(key){\n      const filteredItems= this.state.items.filter(item =>\n        item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  \n    }\n    myStep = () => {\n      const newResult = this.state.result;\n      const newResults = [...this.state.results, newResult]\n      this.setState({\n        results: newResults,\n        step: 2,\n        result:{\n          name: '',\n          key: '',\n          tip: '',\n          sum: ''\n        }\n      })\n      \n        \n\n    };\n    \n    handleChange = input => e => {\n      if (input==='currentItem') {\n        this.setState({\n            currentItem:{\n                text: e.target.value,\n                key: Date.now()\n             }\n        })\n      }\n      else if(input==='name'){\n        this.setState({\n          name: e.target.value,\n          result:{\n            name: e.target.value,\n            key: Date.now()\n          }\n          \n        })\n      }\n      else if(input==='tip'){\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = e.target.value;\n        const tipped = parseFloat(tip)*0.01;\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const tippedTotal = tipped*taxedTotal+taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTipped = tippedTotal.toFixed(2);\n        this.setState(({\n          result: {\n            ...this.state.result,          \n            tip: e.target.value,\n            totalAfterTax: cleanedTaxedTotal.toString(),\n            totalAfterTip: cleanedTipped.toString()\n          }\n        }))\n      }\n      else if(input==='salesTax'){\n          const taxInPercent = e.target.value;\n          const taxInDecimal = parseFloat(taxInPercent)*0.01;\n          const cleanedTax = taxInDecimal.toString();\n          this.setState(({\n              salesTax: cleanedTax\n          }))\n      }\n      else {\n        this.setState({ [input]: e.target.value });\n      }\n    };\n\n    noTip=()=>{\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        this.setState(({\n                result: {\n               ...this.state.result,          \n               tip: 0,\n               totalAfterTax: cleanedTaxedTotal.toString(),\n               totalAfterTip: cleanedTaxedTotal.toString()\n             }\n           }))\n           this.nextStep();\n    }\n\n    tenPercent=()=>{\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = 0.10;\n        const tipped = parseFloat(tip);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const tippedTotal = tipped*taxedTotal+taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTippedTotal = tippedTotal.toFixed(2);\n        this.setState(({\n                result: {\n               ...this.state.result,          \n               tip: 0.10,\n               totalAfterTax: cleanedTaxedTotal.toString(),\n               totalAfterTip: cleanedTippedTotal.toString()\n             }\n           }))\n           this.nextStep();\n    }\n\n    fifteenPercent=()=>{\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = 0.15;\n        const tipped = parseFloat(tip);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const tippedTotal = tipped*taxedTotal+taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTippedTotal = tippedTotal.toFixed(2);\n        this.setState(({\n                result: {\n               ...this.state.result,          \n               tip: 0.15,\n               totalAfterTax: cleanedTaxedTotal.toString(),\n               totalAfterTip: cleanedTippedTotal.toString()\n             }\n           }))\n           this.nextStep();\n    }\n\n    twentyPercent=()=>{\n        const tax = this.state.salesTax;\n        const taxed = parseFloat(tax);\n        const tip = 0.20;\n        const tipped = parseFloat(tip);\n        const sum = this.state.result.sum;\n        const summed = parseFloat(sum);\n        const taxedTotal = taxed*summed+summed;\n        const tippedTotal = tipped*taxedTotal+taxedTotal;\n        const cleanedTaxedTotal = taxedTotal.toFixed(2);\n        const cleanedTippedTotal = tippedTotal.toFixed(2);\n        this.setState(({\n                result: {\n               ...this.state.result,          \n               tip: 0.20,\n               totalAfterTax: cleanedTaxedTotal.toString(),\n               totalAfterTip: cleanedTippedTotal.toString()\n             }\n           }))\n           this.nextStep();\n    }\n    sumList(e){\n        e.preventDefault();\n        const list = this.state.items;\n        var total = 0;\n        list.forEach(item=> {\n            var value = parseFloat(item.text);\n            total += value;\n        })\n        this.setState({\n            result:{\n              ...this.state.result,\n              sum: total.toFixed(2).toString()}\n        })\n        this.nextStep(e);\n        this.setState({\n            items: []\n        })\n      }\n    \n    addItem(e){\n        e.preventDefault();\n        const newItem = this.state.currentItem;\n        if(newItem.text !==\"\"&& !isNaN(newItem.text)){\n          const items = [...this.state.items, newItem];\n        this.setState({\n          items: items,\n          currentItem:{\n            text:'',\n            key:''\n          }\n        })\n        }\n      }\n   \n  \n    render() {\n      const { step } = this.state;\n      const values = this.state;\n      switch (step) {\n        case 1:\n          return (\n            <GetTax\n              nextStep={this.nextStep}\n              handleChange={this.handleChange}\n              values={values}\n            />\n          );\n          case 2:\n            return (\n            <GetName\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n                addName={this.addName}\n            />\n         ); \n         case 3:\n            return (\n            <ListItems\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                addItem={this.addItem}\n                deleteItem={this.deleteItem}\n                sumList={this.sumList}\n                values={values}\n            />\n         ); \n         case 4:\n            return (\n            <GetTip\n                noTip={this.noTip}\n                tenPercent={this.tenPercent}\n                fifteenPercent={this.fifteenPercent}\n                twentyPercent={this.twentyPercent}\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n            />\n         ); \n         case 5:\n            return (\n            <Results\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleChange}\n                values={values}\n                myStep={this.myStep}\n            />\n         ); \n         \n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n    }\n  }\n  \n  export default Driver;","import React from 'react';\nimport  Driver  from './componets/Driver';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Driver />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}